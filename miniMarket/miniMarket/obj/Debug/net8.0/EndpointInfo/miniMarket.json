{
  "openapi": "3.0.4",
  "info": {
    "title": "MiniMarket API",
    "description": "API REST para MiniMarket: \n                        Esta API permite gestionar de manera centralizada los módulos de un supermercado o \n                        tienda en línea. \n                        Incluye operaciones para administrar tiendas, \n                        permitiendo crear, leer, actualizar y eliminar registros de forma segura y eficiente.\n                        Además, ofrece endpoints documentados que facilitan la integración con aplicaciones\n                        front-end (Blazor WebAssembly, aplicaciones móviles u otros clientes HTTP).",
    "version": "v1"
  },
  "paths": {
    "/api/Categorias": {
      "get": {
        "tags": [
          "Categorias"
        ],
        "summary": "Obtiene todas las categorías disponibles en la entidad.",
        "responses": {
          "200": {
            "description": "La operación fue exitosa y se devuelve la lista completa de categorías.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoriaLecturaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoriaLecturaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoriaLecturaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categorias"
        ],
        "summary": "Crea una nueva categoría en la entidad.",
        "requestBody": {
          "description": "Objeto con los datos de la categoría a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaLecturaDto"
                }
              }
            }
          },
          "201": {
            "description": "La categoría se creó correctamente y se devuelve el objeto creado."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar crear la categoría."
          }
        }
      }
    },
    "/api/Categorias/{id}": {
      "get": {
        "tags": [
          "Categorias"
        ],
        "summary": "Obtiene una categoría específica por su identificador único.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la categoría que se desea consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve la categoría correspondiente al ID proporcionado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaLecturaDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró ninguna categoría con el ID especificado."
          }
        }
      },
      "put": {
        "tags": [
          "Categorias"
        ],
        "summary": "Actualiza una categoría existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la categoría que se desea actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los datos actualizados de la categoría.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "La categoría se actualizó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "404": {
            "description": "No se encontró ninguna categoría con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar actualizar la categoría."
          }
        }
      },
      "delete": {
        "tags": [
          "Categorias"
        ],
        "summary": "Elimina una categoría existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la categoría que se desea eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "La categoría se eliminó correctamente."
          },
          "404": {
            "description": "No se encontró ninguna categoría con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar eliminar la categoría."
          }
        }
      }
    },
    "/api/Clientes": {
      "get": {
        "tags": [
          "Clientes"
        ],
        "summary": "Obtiene todos los clientes disponibles en la entidad.",
        "responses": {
          "200": {
            "description": "La operación fue exitosa y se devuelve la lista completa de clientes.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteLecturaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteLecturaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteLecturaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clientes"
        ],
        "summary": "Crea un nuevo cliente en la entidad.",
        "requestBody": {
          "description": "Objeto con los datos del cliente a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteLecturaDto"
                }
              }
            }
          },
          "201": {
            "description": "El cliente se creó correctamente y se devuelve el objeto creado."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar crear el cliente."
          }
        }
      }
    },
    "/api/Clientes/{id}": {
      "get": {
        "tags": [
          "Clientes"
        ],
        "summary": "Obtiene un cliente específico por su identificador único.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del cliente que se desea consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve el cliente correspondiente al ID proporcionado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteLecturaDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró ningún cliente con el ID especificado."
          }
        }
      },
      "put": {
        "tags": [
          "Clientes"
        ],
        "summary": "Actualiza un cliente existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del cliente que se desea actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los datos actualizados del cliente.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "El cliente se actualizó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "404": {
            "description": "No se encontró ningún cliente con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar actualizar el cliente."
          }
        }
      },
      "delete": {
        "tags": [
          "Clientes"
        ],
        "summary": "Elimina un cliente existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del cliente que se desea eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "El cliente se eliminó correctamente."
          },
          "404": {
            "description": "No se encontró ningún cliente con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar eliminar el cliente."
          }
        }
      }
    },
    "/api/Empleados": {
      "get": {
        "tags": [
          "Empleados"
        ],
        "summary": "Obtiene todos los empleados disponibles en la entidad.",
        "description": "Devuelve la lista completa de empleados registrados en el sistema.",
        "responses": {
          "200": {
            "description": "La operación fue exitosa y se devuelve la lista de empleados.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpleadoLecturaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpleadoLecturaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpleadoLecturaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Empleados"
        ],
        "summary": "Crea un nuevo empleado en la entidad.",
        "requestBody": {
          "description": "Objeto con los datos requeridos para crear el empleado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoLecturaDto"
                }
              }
            }
          },
          "201": {
            "description": "El empleado se creó correctamente y se devuelve el objeto creado."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar crear el empleado."
          }
        }
      }
    },
    "/api/Empleados/{id}": {
      "get": {
        "tags": [
          "Empleados"
        ],
        "summary": "Obtiene un empleado específico por su identificador único.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID único del empleado que se desea consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve el empleado correspondiente al ID proporcionado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoLecturaDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró ningún empleado con el ID especificado."
          }
        }
      },
      "put": {
        "tags": [
          "Empleados"
        ],
        "summary": "Actualiza un empleado existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del empleado que se desea actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los datos actualizados del empleado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "El empleado se actualizó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "404": {
            "description": "No se encontró ningún empleado con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar actualizar el empleado."
          }
        }
      },
      "delete": {
        "tags": [
          "Empleados"
        ],
        "summary": "Elimina un empleado existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del empleado que se desea eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "El empleado se eliminó correctamente."
          },
          "404": {
            "description": "No se encontró ningún empleado con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar eliminar el empleado."
          }
        }
      }
    },
    "/api/Inventarios": {
      "get": {
        "tags": [
          "Inventarios"
        ],
        "summary": "Obtiene todos los registros de inventarios disponibles en la entidad.",
        "description": "Devuelve una lista completa de inventarios registrados en la base de datos.",
        "responses": {
          "200": {
            "description": "La operación fue exitosa y se devuelve la lista de inventarios.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventarioLecturaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventarioLecturaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventarioLecturaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Inventarios"
        ],
        "summary": "Crea un nuevo inventario en la entidad.",
        "requestBody": {
          "description": "Objeto con los datos requeridos para crear el inventario.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "El inventario se creó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar crear el inventario."
          }
        }
      }
    },
    "/api/Inventarios/{idProducto}/{idTienda}": {
      "get": {
        "tags": [
          "Inventarios"
        ],
        "summary": "Obtiene un inventario específico a partir de los dos identificadores proporcionados.",
        "description": "Este método requiere dos parámetros, `idProducto` e `idTienda`, los cuales conforman una clave primaria compuesta en la entidad Inventarios.",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto asociado al inventario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idTienda",
            "in": "path",
            "description": "ID de la tienda donde se encuentra el inventario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve el inventario correspondiente a los IDs proporcionados.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioLecturaDto"
                }
              }
            }
          },
          "404": {
            "description": "No existe un inventario con los IDs especificados."
          }
        }
      },
      "put": {
        "tags": [
          "Inventarios"
        ],
        "summary": "Actualiza un inventario existente a partir de su clave compuesta.",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto que identifica el inventario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idTienda",
            "in": "path",
            "description": "ID de la tienda que identifica el inventario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los datos actualizados del inventario.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "El inventario se actualizó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "404": {
            "description": "No se encontró ningún inventario con los IDs especificados."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar actualizar el inventario."
          }
        }
      },
      "delete": {
        "tags": [
          "Inventarios"
        ],
        "summary": "Elimina un inventario existente a partir de su clave compuesta.",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto que identifica el inventario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idTienda",
            "in": "path",
            "description": "ID de la tienda que identifica el inventario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "El inventario se eliminó correctamente."
          },
          "404": {
            "description": "No se encontró ningún inventario con los IDs especificados."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar eliminar el inventario."
          }
        }
      }
    },
    "/api/Marcas": {
      "get": {
        "tags": [
          "Marcas"
        ],
        "summary": "Obtiene todas las marcas disponibles en la entidad.",
        "responses": {
          "200": {
            "description": "La operación fue exitosa y se devuelve la lista completa de marcas.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarcaLecturaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarcaLecturaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarcaLecturaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Marcas"
        ],
        "summary": "Crea una nueva marca en la entidad.",
        "requestBody": {
          "description": "Objeto con los datos de la marca a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarcaEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarcaEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarcaEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MarcaLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarcaLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarcaLecturaDto"
                }
              }
            }
          },
          "201": {
            "description": "La marca se creó correctamente y se devuelve el objeto creado."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar crear la marca."
          }
        }
      }
    },
    "/api/Marcas/{id}": {
      "get": {
        "tags": [
          "Marcas"
        ],
        "summary": "Obtiene una marca específica por su identificador único.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la marca que se desea consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve la marca correspondiente al ID proporcionado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MarcaLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarcaLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarcaLecturaDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró ninguna marca con el ID especificado."
          }
        }
      },
      "put": {
        "tags": [
          "Marcas"
        ],
        "summary": "Actualiza una marca existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la marca que se desea actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los datos actualizados de la marca.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarcaEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarcaEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarcaEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "La marca se actualizó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "404": {
            "description": "No se encontró ninguna marca con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar actualizar la marca."
          }
        }
      },
      "delete": {
        "tags": [
          "Marcas"
        ],
        "summary": "Elimina una marca existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la marca que se desea eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "La marca se eliminó correctamente."
          },
          "404": {
            "description": "No se encontró ninguna marca con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar eliminar la marca."
          }
        }
      }
    },
    "/api/Ordenes": {
      "get": {
        "tags": [
          "Ordenes"
        ],
        "summary": "Obtiene todas las ordenes disponibles en la entidad.",
        "responses": {
          "200": {
            "description": "La operación fue exitosa y se devuelve la lista completa de ordenes.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdenLecturaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdenLecturaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdenLecturaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ordenes"
        ],
        "summary": "Crea una nueva orden en la entidad.",
        "requestBody": {
          "description": "Objeto con los datos de la orden a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenLecturaDto"
                }
              }
            }
          },
          "201": {
            "description": "La orden se creó correctamente y se devuelve el objeto creado."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar crear la orden."
          }
        }
      }
    },
    "/api/Ordenes/{id}": {
      "get": {
        "tags": [
          "Ordenes"
        ],
        "summary": "Obtiene una orden específica por su identificador único.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la orden que se desea consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve la orden correspondiente al ID proporcionado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenLecturaDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró ninguna orden con el ID especificado."
          }
        }
      },
      "put": {
        "tags": [
          "Ordenes"
        ],
        "summary": "Actualiza una orden existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la orden que se desea actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los datos actualizados de la orden.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "La orden se actualizó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "404": {
            "description": "No se encontró ninguna orden con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar actualizar la orden."
          }
        }
      },
      "delete": {
        "tags": [
          "Ordenes"
        ],
        "summary": "Elimina una orden existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la orden que se desea eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "La orden se eliminó correctamente."
          },
          "404": {
            "description": "No se encontró ninguna orden con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar eliminar la orden."
          }
        }
      }
    },
    "/api/Productos": {
      "get": {
        "tags": [
          "Productos"
        ],
        "summary": "Obtiene la lista completa de productos disponibles.",
        "responses": {
          "200": {
            "description": "La operación fue exitosa y devuelve todos los productos.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductoLecturaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductoLecturaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductoLecturaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Productos"
        ],
        "summary": "Crea un nuevo producto en el sistema.",
        "requestBody": {
          "description": "Objeto con los datos del producto a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "El producto se creó correctamente y se devuelve el objeto creado."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar crear el producto."
          }
        }
      }
    },
    "/api/Productos/{id}": {
      "get": {
        "tags": [
          "Productos"
        ],
        "summary": "Obtiene un producto por su identificador único.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto que se desea consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve el producto correspondiente al ID especificado.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "No existe ningún producto con el ID especificado."
          }
        }
      },
      "put": {
        "tags": [
          "Productos"
        ],
        "summary": "Actualiza los datos de un producto existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto que se desea actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los datos actualizados del producto.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "El producto se actualizó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "404": {
            "description": "No se encontró ningún producto con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar actualizar el producto."
          }
        }
      },
      "delete": {
        "tags": [
          "Productos"
        ],
        "summary": "Elimina un producto existente de la base de datos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto que se desea eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "El producto se eliminó correctamente."
          },
          "404": {
            "description": "No se encontró ningún producto con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar eliminar el producto."
          }
        }
      }
    },
    "/api/Tiendas": {
      "get": {
        "tags": [
          "Tiendas"
        ],
        "summary": "Obtiene todas las tiendas disponibles en la entidad.",
        "responses": {
          "200": {
            "description": "La operación fue exitosa y se devuelve la lista completa de tiendas.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TiendaLecturaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TiendaLecturaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TiendaLecturaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tiendas"
        ],
        "summary": "Crea una nueva tienda en la entidad.",
        "requestBody": {
          "description": "Objeto con los datos de la tienda a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TiendaEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TiendaEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TiendaEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TiendaLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TiendaLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TiendaLecturaDto"
                }
              }
            }
          },
          "201": {
            "description": "La tienda se creó correctamente y se devuelve el objeto creado."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar crear la tienda."
          }
        }
      }
    },
    "/api/Tiendas/{id}": {
      "get": {
        "tags": [
          "Tiendas"
        ],
        "summary": "Obtiene una tienda específica por su identificador único.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la tienda que se desea consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve la tienda correspondiente al ID proporcionado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TiendaLecturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TiendaLecturaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TiendaLecturaDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró ninguna tienda con el ID especificado."
          }
        }
      },
      "put": {
        "tags": [
          "Tiendas"
        ],
        "summary": "Actualiza una tienda existente por medio de su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la tienda que se desea actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los datos actualizados de la tienda.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TiendaEscrituraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TiendaEscrituraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TiendaEscrituraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "La tienda se actualizó correctamente."
          },
          "400": {
            "description": "Los datos enviados no cumplen con las validaciones requeridas."
          },
          "404": {
            "description": "No se encontró ninguna tienda con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar actualizar la tienda."
          }
        }
      },
      "delete": {
        "tags": [
          "Tiendas"
        ],
        "summary": "Elimina una tienda existente de la base de datos por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la tienda que se desea eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "La tienda se eliminó correctamente."
          },
          "404": {
            "description": "No se encontró ninguna tienda con el ID especificado."
          },
          "500": {
            "description": "Ocurrió un error interno al intentar eliminar la tienda."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoriaEscrituraDto": {
        "required": [
          "nombreCategoria"
        ],
        "type": "object",
        "properties": {
          "nombreCategoria": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "(DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de la categoría de productos, \r\nel cual permite realizar registros y actualizaciones en la entidad Categorías."
      },
      "CategoriaLecturaDto": {
        "type": "object",
        "properties": {
          "idCategoria": {
            "type": "integer",
            "format": "int32"
          },
          "nombreCategoria": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "(DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de la categoría de productos, \r\nel cual permite realizar consultas en la entidad Categorías."
      },
      "ClienteEscrituraDto": {
        "required": [
          "apellido",
          "correo",
          "nombre",
          "telefono"
        ],
        "type": "object",
        "properties": {
          "nombre": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "apellido": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "telefono": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "correo": {
            "minLength": 1,
            "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$",
            "type": "string",
            "description": "La expresión regular permite validar si el correo electrónico tiene una estructura válida."
          },
          "calle": {
            "type": "string",
            "nullable": true
          },
          "ciudad": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "codigoPostal": {
            "pattern": "(^\\d{4})",
            "type": "string",
            "description": "La expresión regular permite validar que el código postal contenga 4 dígitos.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "(DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de un cliente, \r\nel cual permite realizar registros y actualizaciones en la entidad Clientes."
      },
      "ClienteLecturaDto": {
        "type": "object",
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "apellido": {
            "type": "string",
            "nullable": true
          },
          "telefono": {
            "type": "string",
            "nullable": true
          },
          "correo": {
            "type": "string",
            "nullable": true
          },
          "calle": {
            "type": "string",
            "nullable": true
          },
          "ciudad": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "codigoPostal": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "(DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de un cliente, \r\nel cual permite realizar consultas en la entidad Clientes."
      },
      "EmpleadoEscrituraDto": {
        "required": [
          "activo",
          "apellido",
          "contrasena",
          "correo",
          "idJefe",
          "idTienda",
          "nombre",
          "telefono"
        ],
        "type": "object",
        "properties": {
          "nombre": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "apellido": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "correo": {
            "minLength": 1,
            "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$",
            "type": "string",
            "description": "La expresión regular permite validar si el correo electrónico tiene una estructura válida."
          },
          "telefono": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "activo": {
            "type": "boolean"
          },
          "idTienda": {
            "type": "integer",
            "format": "int32"
          },
          "idJefe": {
            "type": "integer",
            "format": "int32"
          },
          "contrasena": {
            "maxLength": 16,
            "minLength": 8,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "(DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de un empleado, \r\nel cual permite realizar registros y actualizaciones en la entidad Empleados."
      },
      "EmpleadoLecturaDto": {
        "type": "object",
        "properties": {
          "idEmpleado": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "apellido": {
            "type": "string",
            "nullable": true
          },
          "correo": {
            "type": "string",
            "nullable": true
          },
          "telefono": {
            "type": "string",
            "nullable": true
          },
          "activo": {
            "type": "boolean"
          },
          "idTienda": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTienda": {
            "type": "string",
            "nullable": true
          },
          "idJefe": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nombreSuperior": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "(DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de un empleado, \r\nel cual permite realizar consultas en la entidad Empleados."
      },
      "InventarioEscrituraDto": {
        "required": [
          "cantidad",
          "idProducto",
          "idTienda"
        ],
        "type": "object",
        "properties": {
          "idTienda": {
            "type": "integer",
            "format": "int32"
          },
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "cantidad": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InventarioLecturaDto": {
        "type": "object",
        "properties": {
          "idTienda": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTienda": {
            "type": "string",
            "nullable": true
          },
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "nombreProducto": {
            "type": "string",
            "nullable": true
          },
          "cantidad": {
            "type": "integer",
            "format": "int32"
          },
          "precio": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarcaEscrituraDto": {
        "required": [
          "nombreMarca"
        ],
        "type": "object",
        "properties": {
          "nombreMarca": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "(DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de la marca de productos, \r\nel cual permite realizar registros y actualizaciones en la entidad Marcas."
      },
      "MarcaLecturaDto": {
        "type": "object",
        "properties": {
          "idMarca": {
            "type": "integer",
            "format": "int32"
          },
          "nombreMarca": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "(DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de la marca de productos, \r\nel cual permite realizar consultas en la entidad Marcas."
      },
      "OrdenEscrituraDto": {
        "required": [
          "fechaEnvio",
          "fechaRequerida",
          "idCliente",
          "idEmpleado",
          "idTienda"
        ],
        "type": "object",
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "estadoOrden": {
            "type": "string",
            "nullable": true
          },
          "fechaRequerida": {
            "type": "string",
            "format": "date"
          },
          "fechaEnvio": {
            "type": "string",
            "format": "date"
          },
          "idTienda": {
            "type": "integer",
            "format": "int32"
          },
          "idEmpleado": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "(DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de una orden, \r\nel cual permite realizar registros y actualizaciones en la entidad Ordenes."
      },
      "OrdenLecturaDto": {
        "type": "object",
        "properties": {
          "idOrden": {
            "type": "integer",
            "format": "int32"
          },
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "nombreCliente": {
            "type": "string",
            "nullable": true
          },
          "estadoOrden": {
            "type": "string",
            "nullable": true
          },
          "fechaOrden": {
            "type": "string",
            "format": "date"
          },
          "fechaRequerida": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "fechaEnvio": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "idTienda": {
            "type": "integer",
            "format": "int32"
          },
          "idEmpleado": {
            "type": "integer",
            "format": "int32"
          },
          "nombreEmpleado": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "(DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de una orden, \r\nel cual permite realizar consultas en la entidad Ordenes."
      },
      "ProductoEscrituraDto": {
        "required": [
          "anioModelo",
          "idCategoria",
          "idMarca",
          "nombreProducto",
          "precioLista"
        ],
        "type": "object",
        "properties": {
          "nombreProducto": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "idMarca": {
            "type": "integer",
            "format": "int32"
          },
          "idCategoria": {
            "type": "integer",
            "format": "int32"
          },
          "anioModelo": {
            "type": "integer",
            "format": "int32"
          },
          "precioLista": {
            "minimum": 0.1,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "(DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de un producto, \r\nel cual permite realizar registros y actualizaciones en la entidad Productos."
      },
      "ProductoLecturaDto": {
        "type": "object",
        "properties": {
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "nombreProducto": {
            "type": "string",
            "nullable": true
          },
          "idMarca": {
            "type": "integer",
            "format": "int32"
          },
          "nombreMarca": {
            "type": "string",
            "nullable": true
          },
          "idCategoria": {
            "type": "integer",
            "format": "int32"
          },
          "nombreCategoria": {
            "type": "string",
            "nullable": true
          },
          "anioModelo": {
            "type": "integer",
            "format": "int32"
          },
          "precioLista": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "(DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de un producto, \r\nel cual permite realizar consultas en la entidad Productos."
      },
      "TiendaEscrituraDto": {
        "required": [
          "correo",
          "nombreTienda",
          "telefono"
        ],
        "type": "object",
        "properties": {
          "nombreTienda": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "telefono": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "correo": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$",
            "type": "string",
            "description": "La expresión regular permite validar si el correo electrónico tiene una estructura válida."
          },
          "calle": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "ciudad": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "estado": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "codigoPostal": {
            "pattern": "(^\\d{4})",
            "type": "string",
            "description": "La expresión regular permite validar que el código postal contenga 4 dígitos.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "(DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de una tienda, \r\nel cual permite realizar registros y actualizaciones en la entidad Tiendas."
      },
      "TiendaLecturaDto": {
        "type": "object",
        "properties": {
          "idTienda": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTienda": {
            "type": "string",
            "nullable": true
          },
          "telefono": {
            "type": "string",
            "nullable": true
          },
          "correo": {
            "type": "string",
            "nullable": true
          },
          "calle": {
            "type": "string",
            "nullable": true
          },
          "ciudad": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "codigoPostal": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "(DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de una tienda, \r\nel cual permite realizar consultas en la entidad Tiendas."
      }
    }
  }
}