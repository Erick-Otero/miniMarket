<?xml version="1.0"?>
<doc>
    <assembly>
        <name>miniMarket</name>
    </assembly>
    <members>
        <member name="M:miniMarket.Controllers.CategoriasController.Get">
            <summary>Obtiene todas las categorías disponibles en la entidad.</summary>
            <response code="200">La operación fue exitosa y se devuelve la lista completa de categorías.</response>
        </member>
        <member name="M:miniMarket.Controllers.CategoriasController.GetById(System.Int32)">
            <summary>Obtiene una categoría específica por su identificador único.</summary>
            <param name="id">ID de la categoría que se desea consultar.</param>
            <response code="200">Devuelve la categoría correspondiente al ID proporcionado.</response>
            <response code="404">No se encontró ninguna categoría con el ID especificado.</response>
        </member>
        <member name="M:miniMarket.Controllers.CategoriasController.Post(miniMarket.Dto.CategoriaEscrituraDto)">
            <summary>Crea una nueva categoría en la entidad.</summary>
            <param name="dto">Objeto con los datos de la categoría a crear.</param>
            <response code="201">La categoría se creó correctamente y se devuelve el objeto creado.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="500">Ocurrió un error interno al intentar crear la categoría.</response>
        </member>
        <member name="M:miniMarket.Controllers.CategoriasController.Put(System.Int32,miniMarket.Dto.CategoriaEscrituraDto)">
            <summary>Actualiza una categoría existente por medio de su ID.</summary>
            <param name="id">ID de la categoría que se desea actualizar.</param>
            <param name="dto">Objeto con los datos actualizados de la categoría.</param>
            <response code="204">La categoría se actualizó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="404">No se encontró ninguna categoría con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar actualizar la categoría.</response>
        </member>
        <member name="M:miniMarket.Controllers.CategoriasController.Delete(System.Int32)">
            <summary>Elimina una categoría existente por medio de su ID.</summary>
            <param name="id">ID de la categoría que se desea eliminar.</param>
            <response code="204">La categoría se eliminó correctamente.</response>
            <response code="404">No se encontró ninguna categoría con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar eliminar la categoría.</response>
        </member>
        <member name="M:miniMarket.Controllers.ClientesController.Get">
            <summary>Obtiene todos los clientes disponibles en la entidad.</summary>
            <response code="200">La operación fue exitosa y se devuelve la lista completa de clientes.</response>
        </member>
        <member name="M:miniMarket.Controllers.ClientesController.GetByIdAsync(System.Int32)">
            <summary>Obtiene un cliente específico por su identificador único.</summary>
            <param name="id">ID del cliente que se desea consultar.</param>
            <response code="200">Devuelve el cliente correspondiente al ID proporcionado.</response>
            <response code="404">No se encontró ningún cliente con el ID especificado.</response>
        </member>
        <member name="M:miniMarket.Controllers.ClientesController.Post(miniMarket.Dto.ClienteEscrituraDto)">
            <summary>Crea un nuevo cliente en la entidad.</summary>
            <param name="dto">Objeto con los datos del cliente a crear.</param>
            <response code="201">El cliente se creó correctamente y se devuelve el objeto creado.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="500">Ocurrió un error interno al intentar crear el cliente.</response>
        </member>
        <member name="M:miniMarket.Controllers.ClientesController.Put(System.Int32,miniMarket.Dto.ClienteEscrituraDto)">
            <summary>Actualiza un cliente existente por medio de su ID.</summary>
            <param name="id">ID del cliente que se desea actualizar.</param>
            <param name="dto">Objeto con los datos actualizados del cliente.</param>
            <response code="204">El cliente se actualizó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="404">No se encontró ningún cliente con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar actualizar el cliente.</response>
        </member>
        <member name="M:miniMarket.Controllers.ClientesController.Delete(System.Int32)">
            <summary>Elimina un cliente existente por medio de su ID.</summary>
            <param name="id">ID del cliente que se desea eliminar.</param>
            <response code="204">El cliente se eliminó correctamente.</response>
            <response code="404">No se encontró ningún cliente con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar eliminar el cliente.</response>
        </member>
        <member name="M:miniMarket.Controllers.EmpleadosController.Get">
            <summary>Obtiene todos los empleados disponibles en la entidad.</summary>
            <remarks>Devuelve la lista completa de empleados registrados en el sistema.</remarks>
            <response code="200">La operación fue exitosa y se devuelve la lista de empleados.</response>
        </member>
        <member name="M:miniMarket.Controllers.EmpleadosController.GetById(System.Int32)">
            <summary>Obtiene un empleado específico por su identificador único.</summary>
            <param name="id">ID único del empleado que se desea consultar.</param>
            <response code="200">Devuelve el empleado correspondiente al ID proporcionado.</response>
            <response code="404">No se encontró ningún empleado con el ID especificado.</response>
        </member>
        <member name="M:miniMarket.Controllers.EmpleadosController.Post(miniMarket.Dto.EmpleadoEscrituraDto)">
            <summary>Crea un nuevo empleado en la entidad.</summary>
            <param name="dto">Objeto con los datos requeridos para crear el empleado.</param>
            <response code="201">El empleado se creó correctamente y se devuelve el objeto creado.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="500">Ocurrió un error interno al intentar crear el empleado.</response>
        </member>
        <member name="M:miniMarket.Controllers.EmpleadosController.Put(System.Int32,miniMarket.Dto.EmpleadoEscrituraDto)">
            <summary>Actualiza un empleado existente por medio de su ID.</summary>
            <param name="id">ID del empleado que se desea actualizar.</param>
            <param name="dto">Objeto con los datos actualizados del empleado.</param>
            <response code="204">El empleado se actualizó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="404">No se encontró ningún empleado con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar actualizar el empleado.</response>
        </member>
        <member name="M:miniMarket.Controllers.EmpleadosController.Delete(System.Int32)">
            <summary>Elimina un empleado existente por medio de su ID.</summary>        
            <param name="id">ID del empleado que se desea eliminar.</param>
            <response code="204">El empleado se eliminó correctamente.</response>
            <response code="404">No se encontró ningún empleado con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar eliminar el empleado.</response>
        </member>
        <member name="M:miniMarket.Controllers.InventariosController.Get">
            <summary>Obtiene todos los registros de inventarios disponibles en la entidad.</summary>
            <remarks>Devuelve una lista completa de inventarios registrados en la base de datos. </remarks>
            <response code="200">La operación fue exitosa y se devuelve la lista de inventarios.</response>
        </member>
        <member name="M:miniMarket.Controllers.InventariosController.GetById(System.Int32,System.Int32)">
            <summary> Obtiene un inventario específico a partir de los dos identificadores proporcionados.</summary>
            <remarks> Este método requiere dos parámetros, <c>idProducto</c> e <c>idTienda</c>, los cuales conforman una clave primaria compuesta en la entidad Inventarios. </remarks>
            <param name="idProducto">ID del producto asociado al inventario.</param>
            <param name="idTienda">ID de la tienda donde se encuentra el inventario.</param>
            <response code="200">Devuelve el inventario correspondiente a los IDs proporcionados.</response>
            <response code="404">No existe un inventario con los IDs especificados.</response>
        </member>
        <member name="M:miniMarket.Controllers.InventariosController.Post(miniMarket.Dto.InventarioEscrituraDto)">
            <summary>Crea un nuevo inventario en la entidad.</summary>
            <param name="dto">Objeto con los datos requeridos para crear el inventario.</param>
            <response code="201">El inventario se creó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="500">Ocurrió un error interno al intentar crear el inventario.</response>
        </member>
        <member name="M:miniMarket.Controllers.InventariosController.Put(System.Int32,System.Int32,miniMarket.Dto.InventarioEscrituraDto)">
            <summary> Actualiza un inventario existente a partir de su clave compuesta. </summary>
            <param name="idProducto">ID del producto que identifica el inventario.</param>
            <param name="idTienda">ID de la tienda que identifica el inventario.</param>
            <param name="dto">Objeto con los datos actualizados del inventario.</param>
            <response code="204">El inventario se actualizó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="404">No se encontró ningún inventario con los IDs especificados.</response>
            <response code="500">Ocurrió un error interno al intentar actualizar el inventario.</response>
        </member>
        <member name="M:miniMarket.Controllers.InventariosController.Delete(System.Int32,System.Int32)">
            <summary>Elimina un inventario existente a partir de su clave compuesta.</summary>
            <param name="idProducto">ID del producto que identifica el inventario.</param>
            <param name="idTienda">ID de la tienda que identifica el inventario.</param>
            <response code="204">El inventario se eliminó correctamente.</response>
            <response code="404">No se encontró ningún inventario con los IDs especificados.</response>
            <response code="500">Ocurrió un error interno al intentar eliminar el inventario.</response>
        </member>
        <member name="M:miniMarket.Controllers.MarcasController.Get">
            <summary>Obtiene todas las marcas disponibles en la entidad.</summary>
            <response code="200">La operación fue exitosa y se devuelve la lista completa de marcas.</response>
        </member>
        <member name="M:miniMarket.Controllers.MarcasController.GetById(System.Int32)">
            <summary>Obtiene una marca específica por su identificador único.</summary>
            <param name="id">ID de la marca que se desea consultar.</param>
            <response code="200">Devuelve la marca correspondiente al ID proporcionado.</response>
            <response code="404">No se encontró ninguna marca con el ID especificado.</response>
        </member>
        <member name="M:miniMarket.Controllers.MarcasController.Post(miniMarket.Dto.MarcaEscrituraDto)">
            <summary>Crea una nueva marca en la entidad.</summary>
            <param name="dto">Objeto con los datos de la marca a crear.</param>
            <response code="201">La marca se creó correctamente y se devuelve el objeto creado.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="500">Ocurrió un error interno al intentar crear la marca.</response>
        </member>
        <member name="M:miniMarket.Controllers.MarcasController.Put(System.Int32,miniMarket.Dto.MarcaEscrituraDto)">
            <summary>Actualiza una marca existente por medio de su ID.</summary>
            <param name="id">ID de la marca que se desea actualizar.</param>
            <param name="dto">Objeto con los datos actualizados de la marca.</param>
            <response code="204">La marca se actualizó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="404">No se encontró ninguna marca con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar actualizar la marca.</response>
        </member>
        <member name="M:miniMarket.Controllers.MarcasController.Delete(System.Int32)">
            <summary>Elimina una marca existente por medio de su ID.</summary>
            <param name="id">ID de la marca que se desea eliminar.</param>
            <response code="204">La marca se eliminó correctamente.</response>
            <response code="404">No se encontró ninguna marca con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar eliminar la marca.</response>
        </member>
        <member name="M:miniMarket.Controllers.OrdenesController.Get">
            <summary>Obtiene todas las ordenes disponibles en la entidad.</summary>
            <response code="200">La operación fue exitosa y se devuelve la lista completa de ordenes.</response>
        </member>
        <member name="M:miniMarket.Controllers.OrdenesController.GetById(System.Int32)">
            <summary>Obtiene una orden específica por su identificador único.</summary>
            <param name="id">ID de la orden que se desea consultar.</param>
            <response code="200">Devuelve la orden correspondiente al ID proporcionado.</response>
            <response code="404">No se encontró ninguna orden con el ID especificado.</response>
        </member>
        <member name="M:miniMarket.Controllers.OrdenesController.Post(miniMarket.Dto.OrdenEscrituraDto)">
            <summary>Crea una nueva orden en la entidad.</summary>
            <param name="dto">Objeto con los datos de la orden a crear.</param>
            <response code="201">La orden se creó correctamente y se devuelve el objeto creado.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="500">Ocurrió un error interno al intentar crear la orden.</response>
        </member>
        <member name="M:miniMarket.Controllers.OrdenesController.Put(System.Int32,miniMarket.Dto.OrdenEscrituraDto)">
            <summary>Actualiza una orden existente por medio de su ID.</summary>
            <param name="id">ID de la orden que se desea actualizar.</param>
            <param name="dto">Objeto con los datos actualizados de la orden.</param>
            <response code="204">La orden se actualizó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="404">No se encontró ninguna orden con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar actualizar la orden.</response>
        </member>
        <member name="M:miniMarket.Controllers.OrdenesController.Delete(System.Int32)">
            <summary>Elimina una orden existente por medio de su ID.</summary>
            <param name="id">ID de la orden que se desea eliminar.</param>
            <response code="204">La orden se eliminó correctamente.</response>
            <response code="404">No se encontró ninguna orden con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar eliminar la orden.</response>
        </member>
        <member name="M:miniMarket.Controllers.ProductosController.Get">
            <summary>
            Obtiene la lista completa de productos disponibles.
            </summary>
            <response code="200">La operación fue exitosa y devuelve todos los productos.</response>
        </member>
        <member name="M:miniMarket.Controllers.ProductosController.GetById(System.Int32)">
            <summary>
            Obtiene un producto por su identificador único.
            </summary>
            <param name="id">ID del producto que se desea consultar.</param>
            <response code="200">Devuelve el producto correspondiente al ID especificado.</response>
            <response code="404">No existe ningún producto con el ID especificado.</response>
        </member>
        <member name="M:miniMarket.Controllers.ProductosController.Post(miniMarket.Dto.ProductoEscrituraDto)">
            <summary>
            Crea un nuevo producto en el sistema.
            </summary>
            <param name="dto">Objeto con los datos del producto a crear.</param>
            <response code="201">El producto se creó correctamente y se devuelve el objeto creado.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="500">Ocurrió un error interno al intentar crear el producto.</response>
        </member>
        <member name="M:miniMarket.Controllers.ProductosController.Put(System.Int32,miniMarket.Dto.ProductoEscrituraDto)">
            <summary>
            Actualiza los datos de un producto existente.
            </summary>
            <param name="id">ID del producto que se desea actualizar.</param>
            <param name="dto">Objeto con los datos actualizados del producto.</param>
            <response code="204">El producto se actualizó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="404">No se encontró ningún producto con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar actualizar el producto.</response>
        </member>
        <member name="M:miniMarket.Controllers.ProductosController.Delete(System.Int32)">
            <summary>
            Elimina un producto existente de la base de datos.
            </summary>
            <param name="id">ID del producto que se desea eliminar.</param>
            <response code="204">El producto se eliminó correctamente.</response>
            <response code="404">No se encontró ningún producto con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar eliminar el producto.</response>
        </member>
        <member name="M:miniMarket.Controllers.TiendasController.Get">
            <summary>Obtiene todas las tiendas disponibles en la entidad.</summary>
            <response code="200">La operación fue exitosa y se devuelve la lista completa de tiendas.</response>
        </member>
        <member name="M:miniMarket.Controllers.TiendasController.GetById(System.Int32)">
            <summary>Obtiene una tienda específica por su identificador único.</summary>
            <param name="id">ID de la tienda que se desea consultar.</param>
            <response code="200">Devuelve la tienda correspondiente al ID proporcionado.</response>
            <response code="404">No se encontró ninguna tienda con el ID especificado.</response>
        </member>
        <member name="M:miniMarket.Controllers.TiendasController.Post(miniMarket.Dto.TiendaEscrituraDto)">
            <summary>Crea una nueva tienda en la entidad.</summary>
            <param name="dto">Objeto con los datos de la tienda a crear.</param>
            <response code="201">La tienda se creó correctamente y se devuelve el objeto creado.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="500">Ocurrió un error interno al intentar crear la tienda.</response>
        </member>
        <member name="M:miniMarket.Controllers.TiendasController.Put(System.Int32,miniMarket.Dto.TiendaEscrituraDto)">
            <summary>Actualiza una tienda existente por medio de su ID.</summary>
            <param name="id">ID de la tienda que se desea actualizar.</param>
            <param name="dto">Objeto con los datos actualizados de la tienda.</param>
            <response code="204">La tienda se actualizó correctamente.</response>
            <response code="400">Los datos enviados no cumplen con las validaciones requeridas.</response>
            <response code="404">No se encontró ninguna tienda con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar actualizar la tienda.</response>
        </member>
        <member name="M:miniMarket.Controllers.TiendasController.Delete(System.Int32)">
            <summary>Elimina una tienda existente de la base de datos por su ID.</summary>
            <param name="id">ID de la tienda que se desea eliminar.</param>
            <response code="204">La tienda se eliminó correctamente.</response>
            <response code="404">No se encontró ninguna tienda con el ID especificado.</response>
            <response code="500">Ocurrió un error interno al intentar eliminar la tienda.</response>
        </member>
        <member name="T:miniMarket.Dto.CategoriaEscrituraDto">
            <summary>
            (DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de la categoría de productos, 
            el cual permite realizar registros y actualizaciones en la entidad Categorías.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.CategoriaLecturaDto">
            <summary>
            (DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de la categoría de productos, 
            el cual permite realizar consultas en la entidad Categorías.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.ClienteEscrituraDto">
            <summary>
            (DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de un cliente, 
            el cual permite realizar registros y actualizaciones en la entidad Clientes.
            </summary>
        </member>
        <member name="P:miniMarket.Dto.ClienteEscrituraDto.Correo">
            <summary>
            La expresión regular permite validar si el correo electrónico tiene una estructura válida. 
            </summary>
        </member>
        <member name="P:miniMarket.Dto.ClienteEscrituraDto.CodigoPostal">
            <summary>
            La expresión regular permite validar que el código postal contenga 4 dígitos. 
            </summary>
        </member>
        <member name="T:miniMarket.Dto.ClienteLecturaDto">
            <summary>
            (DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de un cliente, 
            el cual permite realizar consultas en la entidad Clientes.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.EmpleadoEscrituraDto">
            <summary>
            (DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de un empleado, 
            el cual permite realizar registros y actualizaciones en la entidad Empleados.
            </summary>
        </member>
        <member name="P:miniMarket.Dto.EmpleadoEscrituraDto.Correo">
            <summary>
            La expresión regular permite validar si el correo electrónico tiene una estructura válida. 
            </summary>
        </member>
        <member name="T:miniMarket.Dto.EmpleadoLecturaDto">
            <summary>
            (DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de un empleado, 
            el cual permite realizar consultas en la entidad Empleados.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.MarcaEscrituraDto">
            <summary>
            (DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de la marca de productos, 
            el cual permite realizar registros y actualizaciones en la entidad Marcas.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.MarcaLecturaDto">
            <summary>
            (DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de la marca de productos, 
            el cual permite realizar consultas en la entidad Marcas.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.OrdenEscrituraDto">
            <summary>
            (DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de una orden, 
            el cual permite realizar registros y actualizaciones en la entidad Ordenes.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.OrdenLecturaDto">
            <summary>
            (DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de una orden, 
            el cual permite realizar consultas en la entidad Ordenes.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.ProductoEscrituraDto">
            <summary>
            (DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de un producto, 
            el cual permite realizar registros y actualizaciones en la entidad Productos.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.ProductoLecturaDto">
            <summary>
            (DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de un producto, 
            el cual permite realizar consultas en la entidad Productos.
            </summary>
        </member>
        <member name="T:miniMarket.Dto.TiendaEscrituraDto">
            <summary>
            (DTO - ESCRITURA DE DATOS) Representa el Data Transfer Object (DTO) de una tienda, 
            el cual permite realizar registros y actualizaciones en la entidad Tiendas.
            </summary>
        </member>
        <member name="P:miniMarket.Dto.TiendaEscrituraDto.Correo">
            <summary>
            La expresión regular permite validar si el correo electrónico tiene una estructura válida. 
            </summary>
        </member>
        <member name="P:miniMarket.Dto.TiendaEscrituraDto.CodigoPostal">
            <summary>
            La expresión regular permite validar que el código postal contenga 4 dígitos. 
            </summary>
        </member>
        <member name="T:miniMarket.Dto.TiendaLecturaDto">
            <summary>
            (DTO - LECTURA DE DATOS) Representa el Data Transfer Object (DTO) de una tienda, 
            el cual permite realizar consultas en la entidad Tiendas.
            </summary>
        </member>
    </members>
</doc>
